#plot_band.py
"""
@author: bczhou
QE_plot_band 
files:bd.dat.gnu generated by bands.in
"""

import re
import pylab as plt
import numpy as np
from matplotlib.pyplot import MultipleLocator
from matplotlib import rcParams

config = {"font.family":'Times New Roman',"font.size": 40, "mathtext.fontset":'stix'}
rcParams.update(config)

def plot_band(spin = False, k_num = 351, k_d = 50, band_num = 58, E_fermi = 8.3385):
"""
k_num : K点总数+1（自身）开始是自己，最后结尾也是自己
k_d : 每一条路径上面的K点数量
band_num : 能带数目
E_fermi : 费米能级
"""
    cfile = open('bd.dat.gnu','r')
    linesspinz = cfile.readlines()
    
    evals_up = np.zeros((band_num, k_num))
    evals_dn = np.zeros((band_num, k_num))
    k_dist = np.zeros((k_num))
    
    iflag1 = 0
    iflag2 = True
    for i in range(band_num):
        for j in range(k_num):
            tmpArr1 = re.split('\s+', linesspinz[iflag1].strip())
            evals_up[i][j] = float(tmpArr1[1]) - E_fermi
            if spin is True:
                evals_dn[i][j] = float(tmpArr1[2]) - E_fermi
            if iflag2:
                k_dist[j] = float(tmpArr1[0])
            iflag1 = iflag1 + 1
        iflag2 = False
        iflag1 = iflag1 + 1
    cfile.close()
    
    fig, ax = plt.subplots(figsize=(12,9), dpi = 300)
    for n in range(len(evals_up)):
        ax.plot(k_dist, evals_up[n], c='red',  lw=3.0, zorder=-50)
        if spin is True:
            ax.plot(k_dist, evals_dn[n], c='blue', lw=3.0, zorder=-50)
    
    ax.set_xlim(k_dist[0],k_dist[-1])
    ax.set_ylim(-2, 3)
    
    k_node = [k_dist[k_d*0], k_dist[k_d*1], k_dist[k_d*2], k_dist[k_d*3-1]]
             # k_dist[k_d*4], k_dist[k_d*5], k_dist[k_d*6], k_dist[k_d*7 -1]
    
    ax.set_xticks(k_node)
    #ax.set_xticklabels(["Γ","M","X","Γ","Y","M","Γ"])
    ax.set_xticklabels(["M","Γ","K", "M"])
    
    for i in range(len(k_node)):
        ax.axvline(x=k_node[i], color='k',ls='-',linewidth=1.5, zorder=-100)
    
    x1_label = ax.get_xticklabels() 
    [x1_label_temp.set_fontname('Times New Roman') for x1_label_temp in x1_label]
    y1_label = ax.get_yticklabels() 
    [y1_label_temp.set_fontname('Times New Roman') for y1_label_temp in y1_label]
    ax.tick_params(axis ='both', which='major',labelsize=35,direction='in',width=2.5,length=6)
    ax.tick_params(axis ='both', which='minor',direction='in',width=2.0,length=8)
    
    ax.set_ylabel("Energy (eV)")
    ax.axhline(y=0.01, linewidth=1.5, color='c',ls='--', zorder=-100)
    
    ax.spines['bottom'].set_linewidth(3.0);###设置底部坐标轴的粗细
    ax.spines['left'].set_linewidth(3.0);####设置左边坐标轴的粗细
    ax.spines['right'].set_linewidth(3.0);###设置右边坐标轴的粗细
    ax.spines['top'].set_linewidth(3.0);####设置上部坐标轴的粗细
    
    ax.tick_params( pad = 10)
    plt.show()
    fig.savefig("plot_band.png",dpi = 300)

plot_band(spin = False, k_num = 121, k_d = 40, band_num = 52, E_fermi = -3.2477)
